{"version":3,"sources":["serviceWorker.ts","store/stack/actions.ts","store/stack/reducer.ts","store/about/actions.ts","store/about/reducer.ts","store/index.ts","components/Display/DisplayLine.component.tsx","components/Display/DisplayContainer.component.tsx","components/Display/Display.component.tsx","components/Keyboard/Key.component.tsx","components/Keyboard/Keyboard.component.tsx","components/Keyboard/KeyboardContainer.component.ts","components/About/AboutBox.component.tsx","components/About/AboutContainer.component.ts","components/About/About.component.tsx","components/Calculator.component.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","KeyCode","KEY_CLICKED","initialState","elements","untouched","TOGGLE_ABOUT","show","combineReducers","stack","action","type","payload","Nine","code","Object","assign","length","toString","numberCode","Comma","line","pop","push","String","includes","decimalPoint","Drop","drop","Enter","enter","SwitchSign","Number","switchSign","Add","Subtract","Divide","Multiply","right","left","res","mathOperator","operatorCode","about","DisplayLineComponent","props","className","content","DisplayContainerComponent","connect","lines","reverse","slice","map","element","index","key","KeyComponent","classes","onClick","label","keys","Seven","Eight","Four","Five","Six","One","Two","Three","Zero","KeyboardContainerComponent","undefined","dispatch","onKeyClick","keyClicked","e","AboutBoxComponent","onClose","target","href","AboutContainerComponent","onToggleAbout","CalculatorComponent","alt","src","store","createStore","rootReducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d1f53bca.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum KeyCode {\n  Zero = 0,\n  One = 1,\n  Two = 2,\n  Three = 3,\n  Four = 4,\n  Five = 5,\n  Six = 6,\n  Seven = 7,\n  Eight = 8,\n  Nine = 9,\n  Comma = 10,\n  SwitchSign,\n  Enter,\n  Divide,\n  Multiply,\n  Subtract,\n  Add,\n  Drop\n}\n\nexport const KEY_CLICKED = 'KEY_CLICKED';\n\ninterface KeyClickedAction {\n  type: typeof KEY_CLICKED;\n  payload: KeyCode;\n}\n\nexport type StackActionTypes = KeyClickedAction;\n\nexport function keyClicked(key: KeyCode): StackActionTypes {\n  return {\n    type: KEY_CLICKED,\n    payload: key\n  };\n}\n","import { StackState } from './state';\nimport { StackActionTypes, KEY_CLICKED, KeyCode } from './actions';\n\nconst initialState: StackState = {\n  elements: ['0'],\n  untouched: true\n};\n\nexport function stackReducer(\n  state = initialState,\n  action: StackActionTypes\n): StackState {\n  switch (action.type) {\n    case KEY_CLICKED:\n      if (action.payload <= KeyCode.Nine) {\n        return numberCode(state, action.payload);\n      }\n      if (action.payload === KeyCode.Comma) {\n        return decimalPoint(state);\n      }\n      return operatorCode(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction numberCode(state: StackState, code: KeyCode): StackState {\n  const elements: string[] = Object.assign([], state.elements);\n  if (state.untouched) {\n    elements[elements.length - 1] = code.toString();\n  } else {\n    elements[elements.length - 1] += code.toString();\n  }\n  return { untouched: false, elements: elements };\n}\n\nfunction decimalPoint(state: StackState): StackState {\n  let elements: string[] = Object.assign([], state.elements);\n  let line = elements.pop();\n\n  if (state.untouched) {\n    elements.push('0.');\n    return { untouched: false, elements };\n  }\n  if (String(line).includes('.')) {\n    elements.push(String(line));\n    return { untouched: false, elements };\n  } else {\n    elements.push(line + '.');\n    return { untouched: false, elements };\n  }\n}\n\nfunction operatorCode(state: StackState, code: KeyCode): StackState {\n  let elements: string[] = Object.assign([], state.elements);\n  switch (code) {\n    case KeyCode.Drop:\n      elements = drop(elements);\n      break;\n    case KeyCode.Enter:\n      elements = enter(elements);\n      break;\n    case KeyCode.SwitchSign:\n      elements = switchSign(elements);\n      break;\n    case KeyCode.Add:\n    case KeyCode.Subtract:\n    case KeyCode.Divide:\n    case KeyCode.Multiply:\n      elements = mathOperator(elements, code);\n      break;\n  }\n\n  return { untouched: true, elements };\n}\n\nfunction drop(elements: string[]): string[] {\n  elements.pop();\n  if (elements.length === 0) {\n    elements.push('0');\n  }\n  return elements;\n}\n\nfunction enter(elements: string[]): string[] {\n  if (elements[0] && elements[elements.length - 1].length > 0) {\n    elements.push(elements[elements.length - 1]);\n  }\n  return elements;\n}\n\nfunction switchSign(elements: string[]): string[] {\n  elements.push(String(Number(elements.pop()) * -1));\n  return elements;\n}\n\nfunction mathOperator(elements: string[], code: KeyCode): string[] {\n  if (elements.length === 1) {\n    return elements;\n  }\n  const right = Number(elements.pop());\n  const left = Number(elements.pop());\n\n  let res: number = 0;\n  switch (code) {\n    case KeyCode.Add:\n      res = left + right;\n      break;\n    case KeyCode.Subtract:\n      res = left - right;\n      break;\n    case KeyCode.Multiply:\n      res = left * right;\n      break;\n    case KeyCode.Divide:\n      res = left / right;\n      break;\n  }\n\n  elements.push(String(res));\n  return elements;\n}\n","export const TOGGLE_ABOUT = 'TOGGLE_ABOUT';\n\ninterface ToggleAboutAction {\n  type: typeof TOGGLE_ABOUT;\n}\n\nexport type AboutActionTypes = ToggleAboutAction;\n\nexport function toggleAbout(): AboutActionTypes {\n  return {\n    type: TOGGLE_ABOUT\n  };\n}\n","import { AboutState } from './state';\nimport { AboutActionTypes, TOGGLE_ABOUT } from './actions';\n\nconst initialState: AboutState = {\n  show: false\n};\n\nexport function aboutReducer(\n  state = initialState,\n  action: AboutActionTypes\n): AboutState {\n  switch (action.type) {\n    case TOGGLE_ABOUT:\n      return { ...state, show: !state.show };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { stackReducer as stack } from './stack/reducer';\nimport { aboutReducer as about } from './about/reducer';\nimport { StackState } from './stack/state';\nimport { AboutState } from './about/state';\n\nexport default combineReducers({\n  stack,\n  about\n});\n\nexport interface AppState {\n  stack: StackState;\n  about: AboutState;\n}\n","import React from 'react';\nimport './DisplayLine.component.css';\n\ninterface DisplayLineComponentProps {\n  content: string;\n}\n\nexport const DisplayLineComponent: React.FC<DisplayLineComponentProps> = (\n  props: DisplayLineComponentProps\n) => {\n  return <div className=\"DisplayLine\">{props.content}</div>;\n};\n","import { AppState } from '../../store';\nimport { connect } from 'react-redux';\nimport { DisplayComponent, DisplayComponentProps } from './Display.component';\n\nfunction mapStateToProps(state: AppState): DisplayComponentProps {\n  const res = { elements: state.stack.elements };\n  return res;\n}\n\nconst DisplayContainerComponent: React.FC = connect(mapStateToProps)(\n  DisplayComponent\n);\n\nexport default DisplayContainerComponent;\n","import React from 'react';\nimport { DisplayLineComponent } from './DisplayLine.component';\nimport './Display.component.css';\n\nexport interface DisplayComponentProps {\n  elements: string[];\n}\n\nexport const DisplayComponent: React.FC<DisplayComponentProps> = (\n  props: DisplayComponentProps\n) => {\n  const lines = Object.assign([], props.elements)\n    .reverse()\n    .slice(0, 3)\n    .reverse();\n\n  return (\n    <div className=\"DisplayComponent\">\n      {lines.map((element, index) => (\n        <DisplayLineComponent key={index} content={element} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Key.component.css';\n\ninterface KeyComponentProps {\n  label: string;\n  classes?: string;\n  onClick: (e: any) => void;\n}\n\nexport const KeyComponent: React.FC<KeyComponentProps> = (\n  props: KeyComponentProps\n) => {\n  return (\n    <div\n      className={`Key${props.classes ? ' ' + props.classes : ''}`}\n      onClick={props.onClick}\n    >\n      <div>{props.label}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Keyboard.component.css';\nimport { KeyComponent } from './Key.component';\nimport { KeyCode } from '../../store/stack/actions';\n\nconst keys: {\n  classes?: string;\n  label: string;\n  code: KeyCode;\n}[] = [\n  {\n    classes: 'EnterKey TextKey',\n    label: 'enter',\n    code: KeyCode.Enter\n  },\n  {\n    classes: 'TextKey',\n    label: '+/-',\n    code: KeyCode.SwitchSign\n  },\n  {\n    classes: 'TextKey',\n    label: 'drop',\n    code: KeyCode.Drop\n  },\n  {\n    label: '7',\n    code: KeyCode.Seven\n  },\n  {\n    label: '8',\n    code: KeyCode.Eight\n  },\n  {\n    label: '9',\n    code: KeyCode.Nine\n  },\n  {\n    label: '/',\n    code: KeyCode.Divide\n  },\n  {\n    label: '4',\n    code: KeyCode.Four\n  },\n  {\n    label: '5',\n    code: KeyCode.Five\n  },\n  {\n    label: '6',\n    code: KeyCode.Six\n  },\n  {\n    label: 'x',\n    code: KeyCode.Multiply\n  },\n  {\n    label: '1',\n    code: KeyCode.One\n  },\n  {\n    label: '2',\n    code: KeyCode.Two\n  },\n  {\n    label: '3',\n    code: KeyCode.Three\n  },\n  {\n    label: '-',\n    code: KeyCode.Subtract\n  },\n  {\n    classes: 'ZeroKey',\n    label: '0',\n    code: KeyCode.Zero\n  },\n  {\n    label: '.',\n    code: KeyCode.Comma\n  },\n  {\n    classes: 'PlusKey',\n    label: '+',\n    code: KeyCode.Add\n  }\n];\n\nexport interface KeyboardComponentProps {\n  onKeyClick: (key: KeyCode) => void;\n}\n\nexport const KeyboardComponent: React.FC<KeyboardComponentProps> = (\n  props: KeyboardComponentProps\n) => {\n  return (\n    <div className=\"Keyboard\">\n      {keys.map((key, index) => (\n        <KeyComponent\n          key={index}\n          classes={key.classes}\n          label={key.label}\n          onClick={e => props.onKeyClick(key.code)}\n        />\n      ))}\n    </div>\n  );\n};\n","import { KeyCode } from '../../store/stack/actions';\nimport {\n  KeyboardComponent,\n  KeyboardComponentProps\n} from './Keyboard.component';\nimport { connect } from 'react-redux';\nimport { keyClicked } from '../../store/stack/actions';\n\nfunction mapDispatchToProps(dispatch: any): KeyboardComponentProps {\n  return {\n    onKeyClick: (key: KeyCode) => {\n      dispatch(keyClicked(key));\n    }\n  };\n}\n\nconst KeyboardContainerComponent: React.FC = connect(\n  undefined,\n  mapDispatchToProps\n)(KeyboardComponent);\n\nexport default KeyboardContainerComponent;\n","import React from 'react';\nimport './AboutBox.component.css';\n\ninterface AboutBoxComponentProps {\n  onClose: () => void;\n}\n\nexport const AboutBoxComponent: React.FC<AboutBoxComponentProps> = (\n  props: AboutBoxComponentProps\n) => {\n  return (\n    <div className=\"AboutBoxComponent\" onClick={e => props.onClose()}>\n      <div>\n        <h1>React Calculator</h1>\n        <p>\n          The calculator uses something called RPN (<u>R</u>everse <u>P</u>olish\n          <u>N</u>otation) as a alternative to parentheses and operator\n          priority.\n        </p>\n        <p>\n          RPN calculators was first introduced by Hewlett Packard on the HP 9100\n          model in 1968.\n        </p>\n        <p>\n          To learn more about RPN and HP calculators please visit{' '}\n          <a target=\"_blank\" href=\"https://www.hpmuseum.org/\">\n            https://www.hpmuseum.org/\n          </a>\n          .\n        </p>\n        <p>\n          <small>\n            This app was built using React/Redux as a limited project to get a\n            grip of React.\n          </small>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { connect } from 'react-redux';\nimport {\n  AboutComponent,\n  AboutComponentOutputProps,\n  AboutComponentInputProps\n} from './About.component';\nimport { toggleAbout } from '../../store/about/actions';\nimport { AppState } from '../../store';\n\nfunction mapDispatchToProps(dispatch: any): AboutComponentOutputProps {\n  return {\n    onToggleAbout: () => {\n      dispatch(toggleAbout());\n    }\n  };\n}\n\nfunction mapStateToProps(state: AppState): AboutComponentInputProps {\n  const res = { show: state.about.show };\n  return res;\n}\n\nexport const AboutContainerComponent: React.FC = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AboutComponent);\n","import React from 'react';\nimport { AboutBoxComponent } from './AboutBox.component';\nimport './About.component.css';\n\nexport type AboutComponentProps = AboutComponentInputProps &\n  AboutComponentOutputProps;\n\nexport interface AboutComponentInputProps {\n  show: boolean;\n}\n\nexport interface AboutComponentOutputProps {\n  onToggleAbout: () => void;\n}\n\nexport const AboutComponent: React.FC<AboutComponentProps> = (\n  props: AboutComponentProps\n) => {\n  return (\n    <div className=\"AboutComponent\">\n      <button onClick={e => props.onToggleAbout()}>?</button>\n      {props.show ? (\n        <AboutBoxComponent onClose={() => props.onToggleAbout()} />\n      ) : null}\n    </div>\n  );\n};\n","import React from 'react';\nimport DisplayContainerComponent from './Display/DisplayContainer.component';\nimport KeyboardContainerComponent from './Keyboard/KeyboardContainer.component';\nimport './Calculator.component.css';\nimport { AboutContainerComponent } from './About/AboutContainer.component';\n\nconst CalculatorComponent: React.FC = () => {\n  return (\n    <div className=\"CalculatorComponent\">\n      <h1>React Calculator</h1>\n      <div>\n        <div className=\"CalcBody\">\n          <div className=\"header\">\n            <img alt=\"HP Logo\" src=\"hewlett-packard.svg\" />\n            <div>\n              <span>57KX</span>\n              <span>SCIENTIFIC EXTREME</span>\n            </div>\n          </div>\n          <DisplayContainerComponent />\n          <KeyboardContainerComponent />\n        </div>\n        <AboutContainerComponent />\n      </div>\n    </div>\n  );\n};\n\nexport default CalculatorComponent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './store';\nimport CalculatorComponent from './components/Calculator.component';\n\nconst store = createStore(\n  rootReducer,\n  process.env.NODE_ENV !== 'production'\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n    : undefined\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <CalculatorComponent />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}